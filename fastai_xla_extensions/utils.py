# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/01_utils.ipynb (unless otherwise specified).

__all__ = ['print_aten_ops']

# Internal Cell
#hide_output
import sys

def xla_imported():
    return 'torch_xla' in sys.modules

# Internal Cell
if not xla_imported():
    from types import SimpleNamespace
    def fake_metrics_report(*args,**kwargs):
        return ""
    met = SimpleNamespace(
        metrics_report = fake_metrics_report
    )
else:
    import torch_xla.debug.metrics as met

# Cell
def print_aten_ops():
    # import torch_xla.debug.metrics as met
    from io import StringIO
    import sys

    class Capturing(list):
        def __enter__(self):
            self._stdout = sys.stdout
            sys.stdout = self._stringio = StringIO()
            return self
        def __exit__(self, *args):
            self.extend(self._stringio.getvalue().splitlines())
            del self._stringio    # free up some memory
            sys.stdout = self._stdout

    out = met.metrics_report()
    if out.find("aten::"):
        print_now=False
        lines = out.split("\n")
        for l in lines:
            if print_now:
                print_now=False
                print(l)
            if l.find("aten::")>-1:
                print("needs lowering:", l)
                print_now=True